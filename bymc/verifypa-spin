#!/bin/bash

PANCC_FLAGS="-DCOLLAPSE -DNOREDUCE"

DIR=`dirname $0`
DIR=`cd "$DIR"; pwd`
TEMPOPTS=`"$DIR"/script/ggetopt.py -o hd: --long help,depth:,on-disk-stack,limit-time:,limit-mem: -n '$@' -- "$@"`
if [ $? != 0 ] ; then echo "Terminating..." >&2 ; exit 1 ; fi

function help_and_quit() {
    echo "use $0 [-d|--depth k] [-h|--help]"
    echo "  -d|--depth k: limit the DFS search with depth k"
    echo "  --on-disk-stack: use spin's on-disk stack (-DSC)"
    echo "  --limit-time: limit (in seconds) Spin's cpu time"
    echo "  --limit-mem: limit (in MB) Spin's virtual memory"
    echo "  -h|--help: show this help message"
    echo ""
    echo " bymc_options are as follows:"
    echo "  --smt 'lib2|z3|-smt2|-in'   (default, use z3 as the backend solver)"
    echo "  --smt 'lib2|mysolver|arg1|arg2|arg3' (use an SMT2 solver, unsat cores are required)"
    echo "  --smt 'yices'               (use yices 1.x as the backend solver, DEPRECATED)"
    exit 1
}

eval set -- "$TEMPOPTS"
while true ; do
    case "$1" in
    -d|--depth) PAN_FLAGS="$PAN_FLAGS -m$2" ; shift 2 ;;
    --on-disk-stack) PANCC_FLAGS="$PAN_FLAGS -DSC" ; shift 1 ;;
    --limit-time) PAN_FLAGS="$PAN_FLAGS -Q$(((59+$2)/60))" ;
        shift 2 ;;
    --limit-mem)
        PANCC_FLAGS="$PANCC_FLAGS -DMEMLIM=$2" ;
        shift 2 ;;
    -h|--help) help_and_quit ;;
    --) shift ; break ;;
    *) echo "Internal error!" ; help_and_quit ;;
    esac
done

if [ "$#" -lt 2 ]; then
    help_and_quit
fi

PROG=$1
SPEC=$2
shift 2
export BYMC_FLAGS="$@ $BYMC_FLAGS -O smt.unsat.cores=1"

TARGET_MC=spin PAN_FLAGS="$PAN_FLAGS" PANCC_FLAGS="$PANCC_FLAGS"\
    `dirname $0`/script/refinement-loop.sh "$PROG" "$SPEC"


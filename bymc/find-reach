#!/usr/bin/python

import os
import re
import sys

def collect_excluded(filename):
    excluded = []
    spec_re = re.compile('^.*spec.*bymc_use != ([0-9]*) *is false.*$')
    fin = open(filename, "r")
    try:
        for line in fin:
            m = spec_re.match(line)
            if m:
                excluded.append(int(m.group(1)))
    finally:
        fin.close()

    print 'excluded = [%s]' % ", ".join(str(d) for d in excluded)
    return excluded        

def exclude_lines(in_filename, out_filename, excluded):
    fin = open(in_filename, "r")
    fout = open(out_filename, "w+")
    
    line_no = 1
    try:
        for line in fin:
            if line_no not in excluded:
                fout.write(line)
            line_no += 1
    finally:
        fout.close()
        fin.close()

HIDDEN_FILENAME = 'hidden.txt'

if __name__ == '__main__':
    try:
        tool, nusmv, prog = sys.argv[1:4]
    except ValueError:
        print "Use: find-reach tool nusmv program"
        sys.exit(99)

    if os.access(HIDDEN_FILENAME, os.F_OK):
        os.remove(HIDDEN_FILENAME)

    step = 1
    excluded = [1]
    while excluded != []:
        print "STEP = %d" % step

        status = os.system("%s %s" % (tool, prog))
        if status != 0:
            print "Abnormal termination of %s" % tool
            sys.exit(1)

        status = os.system("%s -dcx main.smv >nusmv.out" % nusmv)
        if status != 0:
            print "Abnormal termination of %s" % nusmv
            sys.exit(1)

        excluded = collect_excluded('nusmv.out')
        exclude_lines(HIDDEN_FILENAME, 'hidden.new', excluded)
        os.remove(HIDDEN_FILENAME)
        os.rename('hidden.new', HIDDEN_FILENAME)
        step += 1

    print "FINISHED"
